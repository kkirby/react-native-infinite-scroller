import React, { useState, useEffect, useMemo } from 'react';
import { View } from 'react-native';
export default function InfiniteItem({
  item,
  renderItem,
  onLayout,
  elementIndex
}) {
  const [state, setState] = useState({
    left: item.left,
    data: item.data
  });
  useEffect(() => {
    const onUpdate = () => {
      setState({
        data: item.data,
        left: item.left
      });
    };

    item.on('update', onUpdate);
    return () => {
      item.off('update', onUpdate);
    };
  }, [item]);
  const style = useMemo(() => {
    return {
      position: 'absolute',
      left: state.left
    };
  }, [state.left]);
  const props = {
    onLayout: onLayout != null ? onLayout : undefined
  };
  return <View style={style} {...props}>
			{renderItem(state.data, elementIndex)}
		</View>;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9JbmZpbml0ZUl0ZW0udHN4Il0sIm5hbWVzIjpbIlJlYWN0IiwidXNlU3RhdGUiLCJ1c2VFZmZlY3QiLCJ1c2VNZW1vIiwiVmlldyIsIkluZmluaXRlSXRlbSIsIml0ZW0iLCJyZW5kZXJJdGVtIiwib25MYXlvdXQiLCJlbGVtZW50SW5kZXgiLCJzdGF0ZSIsInNldFN0YXRlIiwibGVmdCIsImRhdGEiLCJvblVwZGF0ZSIsIm9uIiwib2ZmIiwic3R5bGUiLCJwb3NpdGlvbiIsInByb3BzIiwidW5kZWZpbmVkIl0sIm1hcHBpbmdzIjoiQUFBQSxPQUFPQSxLQUFQLElBQWVDLFFBQWYsRUFBeUJDLFNBQXpCLEVBQW9DQyxPQUFwQyxRQUFrRCxPQUFsRDtBQUVBLFNBQTJCQyxJQUEzQixRQUFzQyxjQUF0QztBQW1CQSxlQUFlLFNBQVNDLFlBQVQsQ0FBeUI7QUFDdkNDLEVBQUFBLElBRHVDO0FBRXZDQyxFQUFBQSxVQUZ1QztBQUd2Q0MsRUFBQUEsUUFIdUM7QUFJdkNDLEVBQUFBO0FBSnVDLENBQXpCLEVBS0U7QUFDaEIsUUFBTSxDQUFDQyxLQUFELEVBQVFDLFFBQVIsSUFBb0JWLFFBQVEsQ0FBZTtBQUNoRFcsSUFBQUEsSUFBSSxFQUFFTixJQUFJLENBQUNNLElBRHFDO0FBRWhEQyxJQUFBQSxJQUFJLEVBQUVQLElBQUksQ0FBQ087QUFGcUMsR0FBZixDQUFsQztBQUtBWCxFQUFBQSxTQUFTLENBQUMsTUFBTTtBQUNmLFVBQU1ZLFFBQVEsR0FBRyxNQUFNO0FBQ3RCSCxNQUFBQSxRQUFRLENBQUM7QUFDUkUsUUFBQUEsSUFBSSxFQUFFUCxJQUFJLENBQUNPLElBREg7QUFFUkQsUUFBQUEsSUFBSSxFQUFFTixJQUFJLENBQUNNO0FBRkgsT0FBRCxDQUFSO0FBSUEsS0FMRDs7QUFPQU4sSUFBQUEsSUFBSSxDQUFDUyxFQUFMLENBQVEsUUFBUixFQUFrQkQsUUFBbEI7QUFFQSxXQUFPLE1BQU07QUFDWlIsTUFBQUEsSUFBSSxDQUFDVSxHQUFMLENBQVMsUUFBVCxFQUFtQkYsUUFBbkI7QUFDQSxLQUZEO0FBR0EsR0FiUSxFQWFOLENBQUNSLElBQUQsQ0FiTSxDQUFUO0FBZUEsUUFBTVcsS0FBSyxHQUFHZCxPQUFPLENBQVksTUFBTTtBQUN0QyxXQUFPO0FBQ05lLE1BQUFBLFFBQVEsRUFBRSxVQURKO0FBRU5OLE1BQUFBLElBQUksRUFBRUYsS0FBSyxDQUFDRTtBQUZOLEtBQVA7QUFJQSxHQUxvQixFQUtsQixDQUFDRixLQUFLLENBQUNFLElBQVAsQ0FMa0IsQ0FBckI7QUFPQSxRQUFNTyxLQUFLLEdBQUc7QUFDYlgsSUFBQUEsUUFBUSxFQUFFQSxRQUFRLElBQUksSUFBWixHQUFtQkEsUUFBbkIsR0FBOEJZO0FBRDNCLEdBQWQ7QUFJQSxTQUNDLENBQUMsSUFBRCxDQUFNLE1BQU0sQ0FBQ0gsS0FBRCxDQUFaLENBQW9CLElBQUlFLEtBQUosQ0FBcEI7R0FDQyxDQUFDWixVQUFVLENBQUNHLEtBQUssQ0FBQ0csSUFBUCxFQUFZSixZQUFaLENBQVg7RUFDRCxFQUFFLElBQUYsQ0FIRDtBQUtBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7dXNlU3RhdGUsIHVzZUVmZmVjdCwgdXNlTWVtb30gZnJvbSAncmVhY3QnO1xuaW1wb3J0IEluZmluaXRlRWxlbWVudCBmcm9tICcuL0luZmluaXRlRWxlbWVudCc7XG5pbXBvcnQge0xheW91dENoYW5nZUV2ZW50LCBWaWV3fSBmcm9tICdyZWFjdC1uYXRpdmUnO1xuXG5pbnRlcmZhY2UgSXRlbVByb3BzPFQ+IHtcblx0aXRlbTogSW5maW5pdGVFbGVtZW50PFQ+O1xuXHRyZW5kZXJJdGVtOiAoZGF0YTogVCB8IG51bGwsIGVsZW1lbnRJbmRleDogbnVtYmVyKSA9PiBSZWFjdC5SZWFjdEVsZW1lbnQ7XG5cdG9uTGF5b3V0PzogKChlOiBMYXlvdXRDaGFuZ2VFdmVudCkgPT4gdm9pZCkgfCBudWxsO1xuXHRlbGVtZW50SW5kZXg6IG51bWJlcjtcbn1cblxuaW50ZXJmYWNlIEl0ZW1TdGF0ZTxUPiB7XG5cdGxlZnQ6IG51bWJlcjtcblx0ZGF0YTogVCB8IG51bGw7XG59XG5cbmludGVyZmFjZSBTdHlsZU1lbW8ge1xuXHRwb3NpdGlvbjogJ2Fic29sdXRlJztcblx0bGVmdDogbnVtYmVyO1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBJbmZpbml0ZUl0ZW08VD4oe1xuXHRpdGVtLFxuXHRyZW5kZXJJdGVtLFxuXHRvbkxheW91dCxcblx0ZWxlbWVudEluZGV4XG59OiBJdGVtUHJvcHM8VD4pIHtcblx0Y29uc3QgW3N0YXRlLCBzZXRTdGF0ZV0gPSB1c2VTdGF0ZTxJdGVtU3RhdGU8VD4+KHtcblx0XHRsZWZ0OiBpdGVtLmxlZnQsXG5cdFx0ZGF0YTogaXRlbS5kYXRhLFxuXHR9KTtcblxuXHR1c2VFZmZlY3QoKCkgPT4ge1xuXHRcdGNvbnN0IG9uVXBkYXRlID0gKCkgPT4ge1xuXHRcdFx0c2V0U3RhdGUoe1xuXHRcdFx0XHRkYXRhOiBpdGVtLmRhdGEsXG5cdFx0XHRcdGxlZnQ6IGl0ZW0ubGVmdCxcblx0XHRcdH0pO1xuXHRcdH07XG5cblx0XHRpdGVtLm9uKCd1cGRhdGUnLCBvblVwZGF0ZSk7XG5cblx0XHRyZXR1cm4gKCkgPT4ge1xuXHRcdFx0aXRlbS5vZmYoJ3VwZGF0ZScsIG9uVXBkYXRlKTtcblx0XHR9O1xuXHR9LCBbaXRlbV0pO1xuXG5cdGNvbnN0IHN0eWxlID0gdXNlTWVtbzxTdHlsZU1lbW8+KCgpID0+IHtcblx0XHRyZXR1cm4ge1xuXHRcdFx0cG9zaXRpb246ICdhYnNvbHV0ZScsXG5cdFx0XHRsZWZ0OiBzdGF0ZS5sZWZ0LFxuXHRcdH07XG5cdH0sIFtzdGF0ZS5sZWZ0XSk7XG5cblx0Y29uc3QgcHJvcHMgPSB7XG5cdFx0b25MYXlvdXQ6IG9uTGF5b3V0ICE9IG51bGwgPyBvbkxheW91dCA6IHVuZGVmaW5lZCxcblx0fTtcblxuXHRyZXR1cm4gKFxuXHRcdDxWaWV3IHN0eWxlPXtzdHlsZX0gey4uLnByb3BzfT5cblx0XHRcdHtyZW5kZXJJdGVtKHN0YXRlLmRhdGEsZWxlbWVudEluZGV4KX1cblx0XHQ8L1ZpZXc+XG5cdCk7XG59XG4iXX0=